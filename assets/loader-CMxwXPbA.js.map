{"version":3,"file":"loader-CMxwXPbA.js","sources":["../../src/js/header.js","../../src/js/hero.js","../../src/js/weeklyTrends.js","../../src/js/upComing.js","../../src/js/footer.js","../../src/js/catalog.js","../../src/js/scroll.js","../../src/main.js","../../src/js/loader.js"],"sourcesContent":["export function header() {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const menuButton = document.querySelector(\"[data-menu-open]\");\n    const menuContainer = document.getElementById(\"mobile-menu__container\");\n    const backdrop = document.querySelector(\"[data-backdrop]\");\n    const themeSwitcher = document.getElementById(\"theme-switcher\");\n    const body = document.body;\n\n    // Menü Aç/Kapat\n    function toggleMenu() {\n      const isOpen = menuContainer.classList.contains(\"open\");\n      menuContainer.classList.toggle(\"open\", !isOpen);\n      backdrop.classList.toggle(\"show\", !isOpen);\n    }\n\n    menuButton.addEventListener(\"click\", toggleMenu);\n    backdrop.addEventListener(\"click\", () => {\n      menuContainer.classList.remove(\"open\");\n      backdrop.classList.remove(\"show\");\n    });\n\n    // Tema Geçişi\n    function applyTheme() {\n      const currentTheme = localStorage.getItem(\"theme\");\n\n      if (currentTheme === \"dark\") {\n        body.classList.add(\"dark-theme\");\n        document.documentElement.setAttribute(\"data-theme\", \"dark\"); // Dark temayı ayarlamak için\n        themeSwitcher.classList.add(\"dark-mode\");\n      } else {\n        body.classList.remove(\"dark-theme\");\n        document.documentElement.setAttribute(\"data-theme\", \"light\"); // Light temayı ayarlamak için\n        themeSwitcher.classList.add(\"light-mode\");\n      }\n    }\n\n    themeSwitcher.addEventListener(\"click\", () => {\n      const isDark = body.classList.contains(\"dark-theme\");\n      if (isDark) {\n        body.classList.remove(\"dark-theme\");\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\n        localStorage.setItem(\"theme\", \"light\");\n        themeSwitcher.classList.remove(\"dark-mode\");\n        themeSwitcher.classList.add(\"light-mode\");\n      } else {\n        body.classList.add(\"dark-theme\");\n        document.documentElement.setAttribute(\"data-theme\", \"dark\");\n        localStorage.setItem(\"theme\", \"dark\");\n        themeSwitcher.classList.remove(\"light-mode\");\n        themeSwitcher.classList.add(\"dark-mode\");\n      }\n    });\n\n    if (!localStorage.getItem(\"theme\")) {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n    applyTheme();\n\n    // === Aktif Sayfa Linkini Sakla ===\n    const navLinks = document.querySelectorAll(\".nav-link\");\n    const currentPage = window.location.pathname.split(\"/\").pop();\n\n    // Sayfa yüklendiğinde, saklanan aktif sayfa bilgisi varsa, ona turuncu renk ver\n    const savedActivePage = localStorage.getItem(\"activePage\");\n\n    if (savedActivePage) {\n      const activeLink = document.querySelector(\n        `.nav-link[href*='${savedActivePage}']`\n      );\n      if (activeLink) {\n        activeLink.classList.add(\"active\");\n      }\n    }\n\n    // Sayfa butonuna tıklanınca, aktif sayfa bilgisini sakla\n    navLinks.forEach((link) => {\n      link.addEventListener(\"click\", function () {\n        const href = link.getAttribute(\"href\");\n        localStorage.setItem(\"activePage\", href); // Tıklanan sayfa bilgisini sakla\n      });\n    });\n  });\n}\n","import axios from \"axios\";\n\nexport function hero() {\n  const heroSection = document.querySelector(\".hero-container\");\n  const modal = document.getElementById(\"movieModal\");\n  const closeModalButton = document.querySelector(\".close-btn\");\n  const trailerContainer = document.getElementById(\"trailerContainer\");\n  const trailerIframe = document.getElementById(\"trailerIframe\");\n\n  let genreMap = {}; // Genre id -> name eşlemesi için\n\n  async function fetchGenres() {\n    const key = \"cccc5e6104b30f55a3f3b525ec4830b1\";\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`\n      );\n      const genres = response.data.genres;\n      genres.forEach((genre) => {\n        genreMap[genre.id] = genre.name;\n      });\n    } catch (error) {\n      console.error(\"Genre listesi alınamadı\", error);\n    }\n  }\n\n  function getGenreNames(genreIds) {\n    return genreIds.map((id) => genreMap[id] || \"Unknown\");\n  }\n\n  async function getTrendMovies() {\n    const key = \"cccc5e6104b30f55a3f3b525ec4830b1\";\n    const url = \"https://api.themoviedb.org/3\";\n    await fetchGenres(); // Önce genre'ları çek\n\n    try {\n      const response = await axios.get(\n        `${url}/movie/popular?api_key=${key}&language=tr-TR`\n      );\n      const movies = response.data.results;\n      if (movies.length > 0) {\n        const movie = movies[Math.floor(Math.random() * movies.length)];\n        displayMovie(movie);\n      } else {\n        displayDefaultHero();\n      }\n    } catch (error) {\n      console.log(error);\n      displayDefaultHero();\n    }\n  }\n\n  function getStars(voteAverage) {\n    let stars = \"\";\n    let fullStars = Math.floor(voteAverage / 2);\n    for (let i = 0; i < 5; i++) {\n      if (i < fullStars) {\n        stars += `<span class=\"fa fa-star checked\"></span>`;\n      } else {\n        stars += `<span class=\"fa fa-star\"></span>`;\n      }\n    }\n    return stars;\n  }\n\n  function displayMovie(movie) {\n    // heroSection.style.backgroundImage = `url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`;\n    heroSection.style.backgroundImage = `\n  linear-gradient(to right, #111 40%, rgba(17, 17, 17, 0) 80%),\n  url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})\n`;\n\n    heroSection.innerHTML = `\n      <div class=\"hero-content\">\n        <h1>${movie.title}</h1>\n        <p class=\"star\">${getStars(movie.vote_average)}</p>\n        <p class=\"overview\">${movie.overview}</p>\n        <button class=\"trailer\">Watch Trailer</button>\n        <button class=\"detail\">More Details</button>\n      </div>`;\n\n    const watchTrailerButton = document.querySelector(\".trailer\");\n    watchTrailerButton.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      getTrailer(movie.id);\n    });\n\n    const moreDetailsButton = document.querySelector(\".detail\");\n    moreDetailsButton.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      showDetails(movie);\n    });\n  }\n\n  function displayDefaultHero() {\n    heroSection.innerHTML = `\n      <div class=\"hero-content-default\">\n        <h1>Let’s Make Your Own Cinema</h1>\n        <p>Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers.</p>\n        <button class=\"started\">Get Started</button>\n      </div>`;\n  }\n\n  async function getTrailer(movieId) {\n    const key = \"cccc5e6104b30f55a3f3b525ec4830b1\";\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${key}&language=en-US`;\n\n    try {\n      const response = await axios.get(url);\n      const trailer = response.data.results.find(\n        (video) => video.type === \"Trailer\"\n      );\n\n      if (trailer) {\n        const trailerUrl = `https://www.youtube.com/embed/${trailer.key}`;\n        trailerIframe.src = trailerUrl;\n        trailerContainer.style.display = \"block\";\n        modal.style.display = \"block\";\n      } else {\n        alert(\"Sorry, no trailer available.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching trailer\", error);\n      alert(\"Sorry, there was an issue fetching the trailer.\");\n    }\n  }\n\n  function showDetails(movie) {\n    const modalContent = document.querySelector(\".modal-content\");\n    const modalBody = modalContent.querySelector(\".modal-body\");\n    modalBody.innerHTML = \"\";\n\n    // Poster div\n    const posterDiv = document.createElement(\"div\");\n    posterDiv.classList.add(\"modal-poster\");\n\n    const moviePoster = document.createElement(\"img\");\n    moviePoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    moviePoster.alt = \"Movie Poster\";\n    moviePoster.classList.add(\"hero-modal-movie-poster\");\n\n    posterDiv.appendChild(moviePoster);\n\n    // Bilgiler div\n    const infoDiv = document.createElement(\"div\");\n    infoDiv.classList.add(\"hero-modal-info\");\n\n    const movieTitle = document.createElement(\"h2\");\n    movieTitle.textContent = movie.title;\n    infoDiv.appendChild(movieTitle);\n\n    const movieReleaseDate = document.createElement(\"p\");\n    movieReleaseDate.textContent = `RELEASE DATE: ${movie.release_date}`;\n    infoDiv.appendChild(movieReleaseDate);\n\n    const movieRating = document.createElement(\"p\");\n    movieRating.innerHTML = `RATİNG: ${getStars(movie.vote_average)}`;\n    infoDiv.appendChild(movieRating);\n\n    const genreNames = getGenreNames(movie.genre_ids);\n    const movieGenres = document.createElement(\"p\");\n    movieGenres.textContent = `GENRES: ${genreNames.join(\", \")}`;\n    infoDiv.appendChild(movieGenres);\n\n    const movieDescription = document.createElement(\"p\");\n    movieDescription.textContent =\n      movie.overview || \"No description available.\";\n    infoDiv.appendChild(movieDescription);\n\n    // Tümünü modal body'ye ekle\n    modalBody.appendChild(posterDiv);\n    modalBody.appendChild(infoDiv);\n\n    // Modal'ı göster\n    modal.style.display = \"block\";\n  }\n\n  closeModalButton.addEventListener(\"click\", () => {\n    modal.style.display = \"none\";\n    trailerContainer.style.display = \"none\";\n    trailerIframe.src = \"\";\n  });\n\n  window.onclick = function (event) {\n    if (event.target === modal) {\n      modal.style.display = \"none\";\n      trailerContainer.style.display = \"none\";\n      trailerIframe.src = \"\";\n    }\n  };\n\n  getTrendMovies();\n}\n","import axios from \"axios\";\n// import { initializePopup } from \"./moviePopup.js\";\n\n// export function weeklyTrends() {\n//   (function () {\n//     if (typeof window !== \"undefined\") {\n//       if (\n//         document.readyState === \"complete\" ||\n//         document.readyState === \"interactive\"\n//       ) {\n//         initializePopup();\n//       } else {\n//         document.addEventListener(\"DOMContentLoaded\", initializePopup);\n//       }\n//     }\n//   })();\n// }\nexport async function getMovies() {\n  const apiKey = \"6c6ff1eefb34466f1e524e319f306b8f\";\n  const url = \"https://api.themoviedb.org/3\";\n  try {\n    // Popüler filmleri almak için API'yi çağır\n    const response = await axios.get(\n      `${url}/movie/popular?api_key=${apiKey}&language=tr-TR`\n    );\n    console.log(\"Veri:\", response.data);\n    const movies = response.data.results;\n    // Kontrol: Eğer filmler varsa\n    if (movies.length > 0) {\n      // 3 farklı div'e filmleri ekle\n      const movieDivs = [\".img\", \".img1\", \".img2\"];\n      movieDivs.forEach((selector, index) => {\n        const movie = movies[index];\n        const imgContainer = document.querySelector(selector);\n        if (imgContainer) {\n          const movieDiv = document.createElement(\"div\");\n          movieDiv.classList.add(\"movie-card\");\n          movieDiv.dataset.movieId = movie.id;\n          movieDiv.style.cursor = \"pointer\";\n          movieDiv.innerHTML = `\n            <div class=\"image-container\">\n              <img src=\"https://image.tmdb.org/t/p/w500${\n                movie.poster_path || \"\"\n              }\" alt=\"${movie.title}\" width=\"280\" height=\"406\">\n            </div>\n            <div class=\"movie-details\">\n              <div class=\"movie-name\">\n                <h3>${movie.title}</h3>\n                <p>${getGenres(movie.genre_ids).join(\", \")}</p>\n              </div>\n              <div class=\"stars\">\n                ${getStars(movie.vote_average)}\n              </div>\n            </div>\n          `;\n          imgContainer.appendChild(movieDiv);\n        }\n      });\n    }\n  } catch (error) {\n    console.error(\"Error fetching movies:\", error);\n  }\n}\n// Yıldızları oluşturmak için fonksiyon\nfunction getStars(voteAverage) {\n  let stars = \"\";\n  const fullStars = Math.floor(voteAverage / 2); // 1-10 arasında olduğu için 2 ile bölüyoruz\n  for (let i = 0; i < 5; i++) {\n    if (i < fullStars) {\n      stars += `<span class=\"fa fa-star checked\"></span>`;\n    } else {\n      stars += `<span class=\"fa fa-star\"></span>`;\n    }\n  }\n  return stars;\n}\n// Türleri almak için (Türler film API'sinde ID ile gelir)\nfunction getGenres(genreIds) {\n  const genresList = [\n    { id: 28, name: \"Aksiyon\" },\n    { id: 12, name: \"Macera\" },\n    { id: 16, name: \"Animasyon\" },\n    { id: 35, name: \"Komedi\" },\n    { id: 80, name: \"Suç\" },\n    { id: 99, name: \"Belgesel\" },\n    { id: 18, name: \"Dram\" },\n    { id: 10751, name: \"Aile\" },\n    { id: 14, name: \"Fantastik\" },\n    { id: 36, name: \"Tarih\" },\n    { id: 27, name: \"Korku\" },\n    { id: 10402, name: \"Müzik\" },\n    { id: 9648, name: \"Gizem\" },\n    { id: 10749, name: \"Romantik\" },\n    { id: 878, name: \"Bilim Kurgu\" },\n    { id: 10770, name: \"Televizyon\" },\n    { id: 53, name: \"Gerilim\" },\n    { id: 10752, name: \"Savaş\" },\n    { id: 37, name: \"Western\" },\n  ];\n  return genreIds.map((id) => {\n    const genre = genresList.find((g) => g.id === id);\n    return genre ? genre.name : \"Bilinmiyor\";\n  });\n}\n","// import axios from \"axios\";\n// export function upComing() {\n//   const apiKey = \"6c6ff1eefb34466f1e524e319f306b8f\";\n//   const url = \"https://api.themoviedb.org/3\";\n//   const upcomingContainer = document.getElementById(\"movie-container\");\n\n//   async function getRandomUpcomingMovie() {\n//     try {\n//       const response = await axios.get(\n//         `${url}/movie/upcoming?api_key=${apiKey}&language=tr-TR`\n//       );\n//       const movies = response.data.results;\n\n//       if (movies.length === 0) {\n//         upcomingContainer.innerHTML = \"<p>Yakında çıkacak film bulunamadı.</p>\";\n//         return;\n//       }\n\n//       // Rastgele bir film seç\n//       const randomMovie = movies[Math.floor(Math.random() * movies.length)];\n//       //   console.log(randomMovie);\n\n//       // Film kartını oluştur\n//       upcomingContainer.innerHTML = `\n//       <div class=\"upcoming-movie-card\">\n//         <img src=\"https://image.tmdb.org/t/p/w500${randomMovie.poster_path}\"\n//              alt=\"${randomMovie.title}\" class=\"upcoming-movie-poster\">\n//         <div class=\"movie-info\">\n//         <h3 class=\"movie-title\">${randomMovie.title}</h3>\n\n//         <div class=\"release-vote-popular-genre\">\n\n//         <div class=\"release-vote\">\n//               <p><strong>Release date:</strong> <span class=\"release-date-value\">${formatDate(\n//                 randomMovie.release_date\n//               )}</span></p>\n//           <p><strong>Vote / Votes:</strong><span class=\"vote-average\">${\n//             randomMovie.vote_average\n//           }</span> / <span class=\"vote-count\">${\n//         randomMovie.vote_count\n//       }</span></p>\n//         </div>\n\n//         <div class=\"popular-genre\">\n//         <p><strong>Popularity:</strong> <span class=\"popularity\">  ${randomMovie.popularity.toFixed(\n//           1\n//         )} </span></p>\n//           <p><strong>Genre:</strong> <span class=\"genre\">${getGenres(\n//             randomMovie.genre_ids\n//           )}</p></span>\n//         </div>\n\n//         </div>\n\n//           <h3 class=\"about\">ABOUT</h3>\n//           <p class=\"movie-overview\">${randomMovie.overview}</p>\n//           <button class=\"add-to-library\"> Add to my library</button>\n//         </div>\n//       </div>\n//     `;\n//     } catch (error) {\n//       console.error(\"Hata:\", error);\n//       upcomingContainer.innerHTML = \"<p>Film yüklenirken hata oluştu.</p>\";\n//     }\n//   }\n\n//   // Film türlerini almak için yardımcı fonksiyon\n//   function getGenres(genreIds) {\n//     const genreMap = {\n//       28: \"Action\",\n//       12: \"Adventure\",\n//       16: \"Animation\",\n//       35: \"Comedy\",\n//       80: \"Crime\",\n//       18: \"Drama\",\n//       10751: \"Family\",\n//       14: \"Fantasy\",\n//       36: \"History\",\n//       27: \"Horror\",\n//       10402: \"Music\",\n//       9648: \"Mystery\",\n//       10749: \"Romance\",\n//       878: \"Science Fiction\",\n//       10770: \"TV Movie\",\n//       53: \"Thriller\",\n//       10752: \"War\",\n//       37: \"Western\",\n//     };\n\n//     return genreIds.map((id) => genreMap[id] || \"Bilinmeyen Tür\").join(\", \");\n//   }\n\n//   // Tarih formatını düzenleyen fonksiyon (YYYY-AA-GG → GG.AA.YYYY)\n//   function formatDate(dateString) {\n//     const [year, month, day] = dateString.split(\"-\");\n//     return `${day}.${month}.${year}`;\n//   }\n\n//   getRandomUpcomingMovie();\n// }\n\nimport axios from \"axios\";\n\nexport function upComing() {\n  const apiKey = \"6c6ff1eefb34466f1e524e319f306b8f\";\n  const url = \"https://api.themoviedb.org/3\";\n  const upcomingContainer = document.getElementById(\"movie-container\");\n\n  async function getRandomUpcomingMovie() {\n    try {\n      const response = await axios.get(\n        `${url}/movie/upcoming?api_key=${apiKey}&language=tr-TR`\n      );\n      const movies = response.data.results;\n\n      if (movies.length === 0) {\n        upcomingContainer.innerHTML = \"<p>Yakında çıkacak film bulunamadı.</p>\";\n        return;\n      }\n\n      // Rastgele bir film seç\n      const randomMovie = movies[Math.floor(Math.random() * movies.length)];\n\n      // Film kartını oluştur\n      upcomingContainer.innerHTML = `\n      <div class=\"upcoming-movie-card\">\n        <img src=\"https://image.tmdb.org/t/p/w500${randomMovie.poster_path}\" \n             alt=\"${randomMovie.title}\" class=\"upcoming-movie-poster\">\n        <div class=\"movie-info\">\n        <h3 class=\"movie-title\">${randomMovie.title}</h3>\n\n        <div class=\"release-vote-popular-genre\">\n        \n        <div class=\"release-vote\">\n              <p><strong>Release date:</strong> <span class=\"release-date-value\">${formatDate(\n                randomMovie.release_date\n              )}</span></p>\n          <p><strong>Vote / Votes:</strong><span class=\"vote-average\">${\n            randomMovie.vote_average\n          }</span> / <span class=\"vote-count\">${\n        randomMovie.vote_count\n      }</span></p>\n        </div>\n        \n        <div class=\"popular-genre\"> \n        <p><strong>Popularity:</strong> <span class=\"popularity\">  ${randomMovie.popularity.toFixed(\n          1\n        )} </span></p>\n          <p><strong>Genre:</strong> <span class=\"genre\">${getGenres(\n            randomMovie.genre_ids\n          )}</p></span> \n        </div>\n         \n        </div>\n        \n          \n          <h3 class=\"about\">ABOUT</h3>\n          <p class=\"movie-overview\">${randomMovie.overview}</p>\n          <button class=\"add-to-library\"> Add to my library</button>\n        </div>\n      </div>\n    `;\n\n      // \"Add to my library\" butonuna tıklama olayı\n      const addButton = document.querySelector(\".add-to-library\");\n      addButton.addEventListener(\"click\", () => addMovieToLibrary(randomMovie));\n    } catch (error) {\n      console.error(\"Hata:\", error);\n      upcomingContainer.innerHTML = \"<p>Film yüklenirken hata oluştu.</p>\";\n    }\n  }\n\n  // Film türlerini almak için yardımcı fonksiyon\n  function getGenres(genreIds) {\n    const genreMap = {\n      28: \"Action\",\n      12: \"Adventure\",\n      16: \"Animation\",\n      35: \"Comedy\",\n      80: \"Crime\",\n      18: \"Drama\",\n      10751: \"Family\",\n      14: \"Fantasy\",\n      36: \"History\",\n      27: \"Horror\",\n      10402: \"Music\",\n      9648: \"Mystery\",\n      10749: \"Romance\",\n      878: \"Science Fiction\",\n      10770: \"TV Movie\",\n      53: \"Thriller\",\n      10752: \"War\",\n      37: \"Western\",\n    };\n\n    return genreIds.map((id) => genreMap[id] || \"Bilinmeyen Tür\").join(\", \");\n  }\n\n  // Tarih formatını düzenleyen fonksiyon (YYYY-AA-GG → GG.AA.YYYY)\n  function formatDate(dateString) {\n    const [year, month, day] = dateString.split(\"-\");\n    return `${day}.${month}.${year}`;\n  }\n\n  // \"Add to library\" butonuna tıklayınca film bilgilerini localStorage'a ekleme\n  function addMovieToLibrary(movie) {\n    // LocalStorage'da mevcut filmleri al\n    let movieLibrary = JSON.parse(localStorage.getItem(\"movieLibrary\")) || [];\n\n    // Eğer film zaten eklenmemişse, yeni film verisini ekle\n    if (!movieLibrary.some((item) => item.id === movie.id)) {\n      movieLibrary.push(movie);\n      localStorage.setItem(\"movieLibrary\", JSON.stringify(movieLibrary));\n      // alert(`${movie.title} kütüphanenize eklendi!`);\n    } else {\n      alert(`${movie.title} zaten kütüphanenizde mevcut.`);\n    }\n  }\n\n  getRandomUpcomingMovie();\n}\n","export function footer() {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    const openModalBtn = document.querySelector(\"[data-modal-open]\");\n    const closeModalBtn = document.querySelector(\"[data-modal-close]\");\n    const modal = document.querySelector(\"[data-modal]\");\n    // Modal aç\n    openModalBtn.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      modal.classList.remove(\"is-hidden\");\n      document.body.style.overflow = \"hidden\";\n    });\n    // Modal kapat\n    closeModalBtn.addEventListener(\"click\", () => {\n      modal.classList.add(\"is-hidden\");\n      document.body.style.overflow = \"auto\";\n    });\n    modal.addEventListener(\"click\", (e) => {\n      if (e.target === modal) {\n        modal.classList.add(\"is-hidden\");\n        document.body.style.overflow = \"auto\";\n      }\n    });\n  });\n}\n","import axios from \"axios\";\nlet apiKey = \"6c6ff1eefb34466f1e524e319f306b8f\";\nlet url = \"https://api.themoviedb.org/3\";\n// Sayfa bilgileri\nlet currentPage = 1; // Başlangıç sayfası\nlet totalPages = 1; // Toplam sayfa sayısı\nlet pageGroupStart = 1; // Grupların başlangıcı (ilk grup 1-3)\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  catalogFun(currentPage); // İlk sayfayı yükle\n  initializeSearch(); // Arama fonksiyonunu başlat\n});\n// Film kataloğunu al ve sayfalama butonlarını oluştur\nexport async function catalogFun(page = 1, query = \"\") {\n  // DOM'dan catalog öğesini seç\n  let catalog = document.querySelector(\".catalog\");\n  console.log(catalog);\n  // catalog öğesinin doğru şekilde seçildiğini kontrol et\n  if (!catalog) {\n    console.error(\n      \"Catalog öğesi bulunamadı! Lütfen HTML'de .catalog öğesinin bulunduğundan emin olun.\"\n    );\n    return; // Eğer catalog bulunamazsa fonksiyonu durdur\n  }\n  catalog.innerHTML = \"\"; // Önceden var olan içeriği temizle\n  try {\n    // API URL'si\n    let endpoint = query\n      ? `${url}/search/movie?api_key=${apiKey}&language=tr-TR&page=${page}&query=${query}`\n      : `${url}/movie/popular?api_key=${apiKey}&language=tr-TR&page=${page}`;\n    // API isteğini gönder\n    const response = await axios.get(endpoint);\n    let movies = response.data.results;\n    totalPages = response.data.total_pages; // Toplam sayfa sayısını al\n    // Filmleri ekleyelim\n    if (movies.length === 0) {\n      catalog.innerHTML =\n        \"<div class='no-results'>\" +\n        \"<p>Oops...</p>\" +\n        \" <p>We are sorry !</p>\" +\n        \"<p>We don't have any results matching your search.</p>\" +\n        \"</div>\";\n    } else {\n      // Filmler varsa, her birini listele\n      movies.forEach((movie) => {\n        let movieDiv = document.createElement(\"div\");\n        movieDiv.classList.add(\"movie-card\");\n        movieDiv.innerHTML = `\n          <div class=\"image-container\">\n            <img src=\"https://image.tmdb.org/t/p/w500${\n              movie.poster_path\n            }\" alt=\"${movie.title}\">\n          </div>\n          <div class=\"movie-details\">\n            <div class=\"movie-name\">\n              <h3>${movie.title}</h3>\n              <p>${getGenres(movie.genre_ids).join(\", \")}</p>\n            </div>\n            <div class=\"stars\">\n              ${getStars(movie.vote_average)}\n            </div>\n          </div>\n        `;\n        catalog.appendChild(movieDiv);\n      });\n    }\n    // Sayfa butonlarını oluştur\n    createPaginationButtons(query);\n  } catch (error) {\n    console.error(\"Hata:\", error);\n  }\n}\n// Sayfa butonlarını oluştur (3'lü gruplar halinde)\nfunction createPaginationButtons(query = \"\") {\n  const paginationContainer = document.querySelector(\".pagination\");\n  paginationContainer.innerHTML = \"\"; // Önceden var olan butonları temizle\n  // Önceki grup butonunu ekle\n  if (pageGroupStart > 1) {\n    let prevGroupButton = document.createElement(\"button\");\n    prevGroupButton.innerText = \"Prev\";\n    prevGroupButton.classList.add(\"pagination-button\");\n    prevGroupButton.addEventListener(\"click\", () => {\n      pageGroupStart -= 3;\n      catalogFun(pageGroupStart, query); // Yeni grup sayfalarını yükle\n    });\n    paginationContainer.appendChild(prevGroupButton);\n  }\n  // 3 sayfa numarasını grupla\n  for (let i = pageGroupStart; i < pageGroupStart + 3 && i <= totalPages; i++) {\n    let button = document.createElement(\"button\");\n    button.innerText = i;\n    button.classList.add(\"pagination-button\");\n    if (i === currentPage) {\n      button.classList.add(\"active\");\n    }\n    button.addEventListener(\"click\", () => {\n      currentPage = i; // Yeni sayfa numarasını güncelle\n      catalogFun(i, query); // Yeni sayfayı çek\n    });\n    paginationContainer.appendChild(button);\n  }\n  // Sonraki grup butonunu ekle\n  if (pageGroupStart + 3 <= totalPages) {\n    let nextGroupButton = document.createElement(\"button\");\n    nextGroupButton.innerText = \"Next\";\n    nextGroupButton.classList.add(\"pagination-button\");\n    nextGroupButton.addEventListener(\"click\", () => {\n      pageGroupStart += 3;\n      catalogFun(pageGroupStart, query); // Yeni grup sayfalarını yükle\n    });\n    paginationContainer.appendChild(nextGroupButton);\n  }\n}\n// Yıldızları oluşturmak için fonksiyon\nfunction getStars(voteAverage) {\n  let stars = \"\";\n  let fullStars = Math.floor(voteAverage / 2);\n  for (let i = 0; i < 5; i++) {\n    if (i < fullStars) {\n      stars += `<span class=\"fa fa-star checked\"></span>`;\n    } else {\n      stars += `<span class=\"fa fa-star\"></span>`;\n    }\n  }\n  return stars;\n}\n// Türleri almak için (Türler film API'sinde ID ile gelir)\nfunction getGenres(genreIds) {\n  const genresList = [\n    { id: 28, name: \"Aksiyon\" },\n    { id: 12, name: \"Macera\" },\n    { id: 16, name: \"Animasyon\" },\n    { id: 35, name: \"Komedi\" },\n    { id: 80, name: \"Suç\" },\n    { id: 99, name: \"Belgesel\" },\n    { id: 18, name: \"Dram\" },\n    { id: 10751, name: \"Aile\" },\n    { id: 14, name: \"Fantastik\" },\n    { id: 36, name: \"Tarih\" },\n    { id: 27, name: \"Korku\" },\n    { id: 10402, name: \"Müzik\" },\n    { id: 9648, name: \"Gizem\" },\n    { id: 10749, name: \"Romantik\" },\n    { id: 878, name: \"Bilim Kurgu\" },\n    { id: 10770, name: \"Televizyon\" },\n    { id: 53, name: \"Gerilim\" },\n    { id: 10752, name: \"Savaş\" },\n    { id: 37, name: \"Western\" },\n  ];\n  return genreIds.map((id) => {\n    const genre = genresList.find((g) => g.id === id);\n    return genre ? genre.name : \"Bilinmiyor\";\n  });\n}\n// Arama işlevini başlatan fonksiyon\nfunction initializeSearch() {\n  const searchButton = document.getElementById(\"search-btn\");\n  const searchInput = document.getElementById(\"genre-select\");\n  // Arama butonuna tıklandığında\n  searchButton.addEventListener(\"click\", () => {\n    const query = searchInput.value.trim();\n    if (query) {\n      catalogFun(1, query); // Arama yap\n    } else {\n      catalogFun(1); // Arama yapılmazsa, popüler filmleri göster\n    }\n  });\n  // Arama input'una her yazıldığında arama yapmak için\n  searchInput.addEventListener(\"keyup\", (event) => {\n    const query = searchInput.value.trim();\n    if (event.key === \"Enter\" && query) {\n      catalogFun(1, query); // Arama yap\n    }\n  });\n}\n","export function scroll() {\n  const scrollToTopBtn = document.getElementById(\"scrollToTopBtn\");\n\n  window.onscroll = function () {\n    if (\n      document.body.scrollTop > 300 ||\n      document.documentElement.scrollTop > 300\n    ) {\n      scrollToTopBtn.style.display = \"block\";\n    } else {\n      scrollToTopBtn.style.display = \"none\";\n    }\n  };\n\n  scrollToTopBtn.addEventListener(\"click\", function () {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  });\n}\n","import { header } from \"./js/header.js\";\nimport { hero } from \"./js/hero.js\";\nimport { getMovies } from \"./js/weeklyTrends.js\";\n// import { moviePopUp } from \"./js/moviePopUp\";\nimport { upComing } from \"./js/upComing.js\";\nimport { footer } from \"./js/footer.js\";\nimport { catalogFun } from \"./js/catalog.js\";\n// import { myLibrary } from \"./js/myLibrary\";\nimport { scroll } from \"./js/scroll.js\";\n\nheader();\nhero();\ngetMovies();\n// moviePopUp();\n// weeklyTrends();\nupComing();\nfooter();\ncatalogFun();\n// myLibrary();\nscroll();\n","window.addEventListener(\"load\", function () {\n  const loader = document.getElementById(\"loader-wrapper\");\n  const content = document.getElementById(\"content\");\n  // 3 saniye bekle, sonra loader'ı kaldır ve içeriği göster\n  setTimeout(() => {\n    loader.style.display = \"none\";\n    content.style.display = \"block\";\n  }, 1500); // 3000 ms = 3 saniye\n});\n"],"names":["header","menuButton","menuContainer","backdrop","themeSwitcher","body","toggleMenu","isOpen","applyTheme","navLinks","savedActivePage","activeLink","link","href","hero","heroSection","modal","closeModalButton","trailerContainer","trailerIframe","genreMap","fetchGenres","key","axios","genre","error","getGenreNames","genreIds","id","getTrendMovies","url","movies","movie","displayMovie","displayDefaultHero","getStars","voteAverage","stars","fullStars","i","e","getTrailer","showDetails","movieId","trailer","video","trailerUrl","modalBody","posterDiv","moviePoster","infoDiv","movieTitle","movieReleaseDate","movieRating","genreNames","movieGenres","movieDescription","event","getMovies","apiKey","response","selector","index","imgContainer","movieDiv","getGenres","genresList","g","upComing","upcomingContainer","getRandomUpcomingMovie","randomMovie","formatDate","addMovieToLibrary","dateString","year","month","day","movieLibrary","item","footer","openModalBtn","closeModalBtn","currentPage","totalPages","pageGroupStart","catalogFun","initializeSearch","page","query","catalog","endpoint","createPaginationButtons","paginationContainer","prevGroupButton","button","nextGroupButton","searchButton","searchInput","scroll","scrollToTopBtn","loader","content"],"mappings":"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"}